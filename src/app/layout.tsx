import Navbar from "@/components/nabvar/Navbar";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Footer from "@/components/footer/Footer";
import { ThemeProvider } from "../../context/ThemeContext";
import useSWR from "swr";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${inter.className}`}>
        <ThemeProvider>
          <div className="px-[100px] bg-slate-800">
            <Navbar />
            {children}
            <Footer />
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
export const Dashboard = () => {
  // const [data,setData] = useState([])
  // const [err,setError] = useState(false)
  // const [loading,setLoading] = useState(false)
  // useEffect(() => {
  //   const getData = async () => {
  //     setLoading(true)
  //     const res = await fetch("https://jsonplaceholder.typicode.com/posts", {
  //       cache: "no-store",
  //     });
  //     // The return value is *not* serialized
  //     // You can return Date, Map, Set, etc.
  //     if (!res.ok) {
  //       // This will activate the closest `error.js` Error Boundary
  //       setError(true)
  //     }
  //     const jsonData = await res.json()
  //     setData(jsonData)
  //     setLoading(false)
  //   }
  //   getData()
  // },[])
  const fetcher = async (...args: any[]): Promise<any> => {
    const res = await fetch(...args);
    return res.json();
  };

  const { data, error, isLoading } = useSWR(
    "https://jsonplaceholder.typicode.com/posts",
    fetcher
  );
  console.log(data);
  return <div>Dashboard</div>;
};
